package image_features;

message AllImages {
  repeated Image image = 1;
  optional string timestamp = 2;
  optional FeatureExtractorConfig extractor_config = 3;
}

message Image {
  required string path = 1;
  repeated ImageFeature image_feature = 2;
}

message ImageFeature {
  enum FeatureType {
    HarrisCorner = 0;
    ShiTomasiCorner = 1;
    // SIFT and SURF are patented algorithms
    SIFT = 2;
    SURF = 3;
    FAST = 4;
    BRIEF = 5;
    ORB = 6;
    // This one performs really badly
    OCR = 7;
    // Add more feature type here
  }
  required FeatureType type = 1;
  repeated Feature key_value = 2;
}

message Feature {
  message KeyPoint {
    required double x = 1;
    required double y = 2;
  }
  // required string name = 1;
  required KeyPoint kp = 1;
  // descriptors
  optional bytes des = 2;
}

message FeatureExtractorConfig {
  // Types of features to extract from an image.
  optional bool harris_corner = 1 [default = false];
  optional bool shitomasi_corner = 2 [default = false];
  optional bool sift = 3 [default = true];
  optional bool surf = 4 [default = false];
  optional bool fast = 5 [default = false];
  optional bool brief = 6 [default = false];
  optional bool orb = 7 [default = false];
  optional bool ocr = 8 [default = false];
}

message ImageMatcherConfig {
  // compare two sets if true, else compare within one set
  optional bool compare_two_sets = 1 [default = true];
}
